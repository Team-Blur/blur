server.port: 0

spring:
  application:
    name: user-service
    
# Security OAuth
  security:
    oauth2.client:
      registration:
        google:
          clientId: '871343491779-e59od5bh6t12qa41cce5lkbu4ok745s5.apps.googleusercontent.com'
          clientSecret: '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'
          scope:
            - email
            - profile
        naver:
          clientId: 'kbnqJ8MXe1ujGFy2Bd77'
          clientSecret: 'FhgB0qWTta'
          clientAuthenticationMethod: post
          authorizationGrantType: authorization_code
          redirectUri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
          scope:
            - nickname
            - email
            - profile_image
          clientName: Naver
        kakao:
          clientId: '2820dd0f9d4da11c57a25ab3f29de16c'
          clientSecret: 'cXiw9put8fVqQ0rW436JqzJIdtSyRDWp'
          clientAuthenticationMethod: post
          authorizationGrantType: authorization_code
          redirectUri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
          scope:
            - profile_nickname
            - profile_image
            - account_email
          clientName: Kakao

  zipkin:
    base-url: http://127.0.0.1:9411
    enabled: true
  sleuth:
    sampler:
      probability: 1.0

  config:
    import: optional:configserver:http://127.0.0.1:8888
  cloud:
    config:
      name: user-service
      profile: dev

  datasource:
    url: jdbc:postgresql://localhost:5432/userdb
    driver-class-name: org.postgresql.Driver
    username: postgres
    password: admin

  jpa:
    hibernate:
      ddl-auto: create
    generate-ddl: true
    open-in-view: false
    properties:
      hibernate:
        default_batch_fetch_size: 1000

  redis:
    host: 127.0.0.1
    port: 6379

eureka:
  client:
    service-url:
      defalutZone: http://localhost:8761/eureka
    fetch-registry: true
    register-with-eureka: true
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}

logging:
  level:
    com.blur: DEBUG

# jpa query, parameter 로그 (p6spy)
decorator.datasource.p6spy:
  enable-logging: true

# 3600000
token:
  access-expired-time: 3600000
  refresh-expired-time: 604800000
  secret: $2a$10$q42lY7Y18xqrFt1qbODZIO4OMTeOxnrCe7tF3n9bazJinVE7VH5Pi
  refresh-token-name: refresh-token
  access-token-name: access-token